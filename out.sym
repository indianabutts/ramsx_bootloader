Sections:
00: "seg4000" (4000-4331)


Source: "./main.asm"
                        	     1: 				; ==[ Constants ]============================================
                        	     2: 
                        	     3: ORGADR  equ $4000
                        	     4: CHPUT   equ $00A2
                        	     5: CHMOD   equ $005f
                        	     6: CHGET equ $009F
                        	     7: CHCOLOR equ $0062
                        	     8: 
                        	     9: FORCLR equ $F3E9
                        	    10: BAKCLR equ $F3EA
                        	    11: BDCLR equ $F3EB
                        	    12: 
                        	    13: CLS equ $00C3
                        	    14: 
                        	    15: KBDROW equ $AA
                        	    16: KBDDATA equ $A9
                        	    17: KEYS	EQU	$FBE5
                        	    18: 
                        	    19: selectorIndex equ $C001
                        	    20: currentGame equ $C003
                        	    21: loopIndex equ $C005
                        	    22: currentPage equ $C006
                        	    23: 
                        	    24: 				; ==[ Header ]==============================================
                        	    25: 
                        	    26: 				; Place header inside the binary.
                        	    27: 	org ORGADR
                        	    28: 				; ROM header
00:4000 4142            	    29: 	db "AB"
00:4002 7242            	    30: 	dw Init
00:4004 0000            	    31: 	dw 0, 0, 0, 0, 0, 0
00:4006 0000
00:4008 0000
00:400A 0000
00:400C 0000
00:400E 0000
                        	    32: 
                        	    33: 
                        	    34: games:
00:4010 3130205961726420	    35: 	db "10 Yard Fight (1986)   128kb", 0
00:4018 4669676874202831
00:4020 3938362920202031
00:4028 32386B62
00:402C 00
00:402D 3139343220283139	    36: 	db "1942 (1986)(ASCII)(J   128kb", 0
00:4035 3836292841534349
00:403D 4929284A20202031
00:4045 32386B62
00:4049 00
00:404A 3139343220283139	    37: 	db "1942 (1987)(Zemina)(   128kb", 0
00:4052 383729285A656D69
00:405A 6E61292820202031
00:4062 32386B62
00:4066 00
00:4067 334420476F6C6620	    38: 	db "3D Golf Simulation -   128kb", 0
00:406F 53696D756C617469
00:4077 6F6E202D20202031
00:407F 32386B62
00:4083 00
00:4084 334420476F6C6620	    39: 	db "3D Golf Simulation -   128kb", 0
00:408C 53696D756C617469
00:4094 6F6E202D20202031
00:409C 32386B62
00:40A0 00
00:40A1 33442054656E6E69	    40: 	db "3D Tennis (1983)(ASC   128kb", 0
00:40A9 7320283139383329
00:40B1 2841534320202031
00:40B9 32386B62
00:40BD 00
00:40BE 3344205761746572	    41: 	db "3D Water Driver (198   128kb", 0
00:40C6 2044726976657220
00:40CE 2831393820202031
00:40D6 32386B62
00:40DA 00
00:40DB 41204C696665204D	    42: 	db "A Life M36 Planet -    128kb", 0
00:40E3 333620506C616E65
00:40EB 74202D2020202031
00:40F3 32386B62
00:40F7 00
00:40F8 412E452E20283139	    43: 	db "A.E. (1983)(Toshiba-   128kb", 0
00:4100 38332928546F7368
00:4108 6962612D20202031
00:4110 32386B62
00:4114 00
00:4115 4131205370697269	    44: 	db "A1 Spirit - The Way    128kb", 0
00:411D 74202D2054686520
00:4125 5761792020202031
00:412D 32386B62
00:4131 00
00:4132 4163746D616E2028	    45: 	db "Actman (1984)(ASCII)   128kb", 0
00:413A 3139383429284153
00:4142 4349492920202031
00:414A 32386B62
00:414E 00
00:414F 416476656E276368	    46: 	db "Adven'chuta! (1983)(   128kb", 0
00:4157 7574612120283139
00:415F 3833292820202031
00:4167 32386B62
00:416B 00
00:416C 416C63617A617220	    47: 	db "Alcazar - The Forgot   128kb", 0
00:4174 2D2054686520466F
00:417C 72676F7420202031
00:4184 32386B62
00:4188 00
00:4189 416C696261626120	    48: 	db "Alibaba and 40 Thiev   128kb", 0
00:4191 616E642034302054
00:4199 6869657620202031
00:41A1 32386B62
00:41A5 00
00:41A6 416C69656E203820	    49: 	db "Alien 8 (1985)(Ultim   128kb", 0
00:41AE 2831393835292855
00:41B6 6C74696D20202031
00:41BE 32386B62
00:41C2 00
00:41C3 416C69656E203820	    50: 	db "Alien 8 (1986)(Nippo   128kb", 0
00:41CB 283139383629284E
00:41D3 6970706F20202031
00:41DB 32386B62
00:41DF 00
00:41E0 416C69656E732E20	    51: 	db "Aliens. Alien 2 (198   128kb", 0
00:41E8 416C69656E203220
00:41F0 2831393820202031
00:41F8 32386B62
00:41FC 00
00:41FD 416C70686120526F	    52: 	db "Alpha Roid (1986)(Po   128kb", 0
00:4205 6964202831393836
00:420D 2928506F20202031
00:4215 32386B62
00:4219 00
00:421A 416C706861205371	    53: 	db "Alpha Squadron (1985   128kb", 0
00:4222 756164726F6E2028
00:422A 3139383520202031
00:4232 32386B62
00:4236 00
00:4237 416D65726963616E	    54: 	db "American Truck (1986   128kb", 0
00:423F 20547275636B2028
00:4247 3139383620202031
00:424F 32386B62
00:4253 00
00:4254 416D65726963616E	    55: 	db "American Truck (1986   128kb", 0
00:425C 20547275636B2028
00:4264 3139383620202031
00:426C 32386B62
00:4270 00
                        	    56: gamesend:
00:4271 00              	    57: 	nop
                        	    58: 				; ==[ Program ]=============================================
                        	    59: Init:
00:4272 210800          	    60: 	ld hl, 8
00:4275 22AA00          	    61: 	ld (KBDROW), hl
                        	    62: 	; Set Screen Mode to 0
00:4278 3E00            	    63: 	ld a, 0
00:427A CD5F00          	    64: 	call CHMOD
                        	    65: 	; Set Pallette to White on Black
00:427D 3E01            	    66: 	ld a, 1
00:427F 32EAF3          	    67: 	ld (BAKCLR), a
00:4282 32EBF3          	    68: 	ld (BDCLR), a
00:4285 CD6200          	    69: 	call CHCOLOR
                        	    70: 	
                        	    71: InitGameLoop:
                        	    72: ; Dummy Dir Name and Go Back to determine maximum games in list
00:4288 CDC300          	    73: 	call CLS
00:428B 212843          	    74: 	ld hl, dirName
00:428E CDD742          	    75: 	call PrintStr
00:4291 CDF242          	    76: 	call NewLn
00:4294 212443          	    77: 	ld hl, goBack
00:4297 CDD742          	    78: 	call PrintStr
00:429A CDF242          	    79: 	call NewLn
                        	    80: 	; Load start address for Games List
00:429D 211040          	    81: 	ld hl,games
                        	    82: 	; ld (currentGame), hl
                        	    83: 	; Load end address for Games List
00:42A0 117142          	    84: 	ld de, gamesend
                        	    85: 	
                        	    86: 	; Initialize Loop Index to 0
00:42A3 3E00            	    87: 	ld a, 0 
00:42A5 3205C0          	    88: 	ld (loopIndex), a
                        	    89: 
                        	    90: GamesLoop:
                        	    91: 	; Put Pointer Character if LoopIndex is Equ to PointerIndex
                        	    92: 	
                        	    93: 	;; Store the current HL
00:42A8 E5              	    94: 	push hl
                        	    95: 
00:42A9 3E00            	    96: 	ld a, 0
00:42AB B7              	    97: 	or a,
00:42AC D601            	    98: 	sub 1
                        	    99: 	;; Get the Pointer Index
00:42AE 2101C0          	   100: 	ld hl, selectorIndex
00:42B1 4E              	   101: 	ld c, (hl)
                        	   102: 	;; Get the LoopIndex	
00:42B2 2A05C0          	   103: 	ld hl, (loopIndex)
00:42B5 7D              	   104: 	ld a, l
00:42B6 B9              	   105: 	cp c
00:42B7 CCE142          	   106: 	call z, PrintPointer
00:42BA C4EA42          	   107: 	call nz, PrintSpace
00:42BD 23              	   108: 	inc hl
00:42BE 2205C0          	   109: 	ld (loopIndex), hl
00:42C1 E1              	   110: 	pop hl
                        	   111: 	
                        	   112: 	
                        	   113: 	;; Compare the two, if equal, then print the pointer, else continue
                        	   114: 
                        	   115: 	;; Restore HL
                        	   116: 
                        	   117: 	
                        	   118: 	; Print Current Game Name and a new line
00:42C2 CDD742          	   119: 	call PrintStr
00:42C5 CDF242          	   120: 	call NewLn
                        	   121: 	
                        	   122: 	; Compare HL to GamesEnd
00:42C8 3E00            	   123: 	ld a, 0
00:42CA B7              	   124: 	or a	; Clears Carry Flag
00:42CB 23              	   125: 	inc hl
00:42CC 117142          	   126: 	ld de, gamesend
00:42CF ED52            	   127: 	sbc hl,de
00:42D1 19              	   128: 	add hl,de
                        	   129: 	
                        	   130: 	; Loop if HL is less than GamesEnd
00:42D2 38D4            	   131: 	jr c, GamesLoop
00:42D4 C31D43          	   132: 	jp MainLoop
                        	   133: 
                        	   134: PrintStr:
                        	   135: 	; Load first character of string to Reg A
00:42D7 7E              	   136: 	ld a, (hl)
                        	   137: 	; If 0 detected, this is the end of the string
00:42D8 FE00            	   138: 	cp 0
00:42DA C8              	   139: 	ret z
                        	   140: 	; Otherwise, Increment HL and Put the current value pointed to by HL to the screen and loop
00:42DB 23              	   141: 	inc hl
00:42DC CDA200          	   142: 	call CHPUT
00:42DF 18F6            	   143: 	jr PrintStr
                        	   144: 
                        	   145: PrintPointer:
00:42E1 F5              	   146: 	push af
00:42E2 3A3043          	   147: 	ld a, (pointerChar)
00:42E5 CDA200          	   148: 	call CHPUT
00:42E8 F1              	   149: 	pop af
00:42E9 C9              	   150: 	ret
                        	   151: 	
                        	   152: PrintSpace:
00:42EA F5              	   153: 	push af,
00:42EB 3E20            	   154: 	ld a, $20
00:42ED CDA200          	   155: 	call CHPUT
00:42F0 F1              	   156: 	pop af,
00:42F1 C9              	   157: 	ret
                        	   158: 
                        	   159: NewLn:
00:42F2 F5              	   160: 	push af
00:42F3 3E0D            	   161: 	ld a, 13
00:42F5 CDA200          	   162: 	call CHPUT
00:42F8 3E0A            	   163: 	ld a, 10
00:42FA CDA200          	   164: 	call CHPUT
00:42FD F1              	   165: 	pop af
00:42FE C9              	   166: 	ret
                        	   167: 
                        	   168: IncrementSelector:
00:42FF 2A01C0          	   169: 	ld hl, (selectorIndex)
00:4302 23              	   170: 	inc hl
00:4303 2201C0          	   171: 	ld (selectorIndex), hl
00:4306 C9              	   172: 	ret
                        	   173: 
                        	   174: DecrementSelector:
00:4307 2A01C0          	   175: 	ld hl, (selectorIndex)
00:430A 2B              	   176: 	dec hl
00:430B 2201C0          	   177: 	ld (selectorIndex), hl
00:430E C9              	   178: 	ret
                        	   179: 
                        	   180: CheckInput:
00:430F CD9F00          	   181: 	call CHGET
00:4312 FE1E            	   182: 	cp 30
00:4314 CC0743          	   183: 	call z, DecrementSelector
00:4317 FE1F            	   184: 	cp 31
00:4319 CCFF42          	   185: 	call z, IncrementSelector
00:431C C9              	   186: 	ret
                        	   187: 
                        	   188: MainLoop:
00:431D F3              	   189: 	di
00:431E CD0F43          	   190: 	call CheckInput
00:4321 CD8842          	   191: 	call InitGameLoop
                        	   192: 	
                        	   193: 	
                        	   194: 
00:4324 202E2E          	   195: goBack:	 db " ..",0
00:4327 00
00:4328 2047616D65732F  	   196: dirName: db " Games/",0
00:432F 00
                        	   197: pointerChar:
00:4330 3E              	   198: 	db ">"


Symbols by name:
BAKCLR                           E:F3EA
BDCLR                            E:F3EB
CHCOLOR                          E:0062
CheckInput                       A:430F
CHGET                            E:009F
CHMOD                            E:005F
CHPUT                            E:00A2
CLS                              E:00C3
DecrementSelector                A:4307
dirName                          A:4328
games                            A:4010
gamesend                         A:4271
GamesLoop                        A:42A8
goBack                           A:4324
IncrementSelector                A:42FF
Init                             A:4272
InitGameLoop                     A:4288
KBDROW                           E:00AA
loopIndex                        E:C005
MainLoop                         A:431D
NewLn                            A:42F2
ORGADR                           E:4000
pointerChar                      A:4330
PrintPointer                     A:42E1
PrintSpace                       A:42EA
PrintStr                         A:42D7
selectorIndex                    E:C001

Symbols by value:
005F CHMOD
0062 CHCOLOR
009F CHGET
00A2 CHPUT
00AA KBDROW
00C3 CLS
4000 ORGADR
4010 games
4271 gamesend
4272 Init
4288 InitGameLoop
42A8 GamesLoop
42D7 PrintStr
42E1 PrintPointer
42EA PrintSpace
42F2 NewLn
42FF IncrementSelector
4307 DecrementSelector
430F CheckInput
431D MainLoop
4324 goBack
4328 dirName
4330 pointerChar
C001 selectorIndex
C005 loopIndex
F3EA BAKCLR
F3EB BDCLR

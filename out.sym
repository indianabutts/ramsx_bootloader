Sections:
00: "seg4000" (4000-425F)
01: "segc000" (C000-C005)


Source: "./main.asm"
                        	     1: 				; ==[ Constants ]============================================
                        	     2: 
                        	     3: ORGADR  equ $4000
                        	     4: CHPUT   equ $00A2
                        	     5: CHMOD   equ $005f
                        	     6: 
                        	     7: CHCOLOR equ $0062
                        	     8: 
                        	     9: FORCLR equ $F3E9
                        	    10: BAKCLR equ $F3EA
                        	    11: BDCLR equ $F3EB
                        	    12: RomSize equ $4000
                        	    13: 
                        	    14: GameEntrySize equ 176
                        	    15: 
                        	    16: 				; ==[ Header ]==============================================
                        	    17: 
                        	    18: 				; Place header inside the binary.
                        	    19: 	org ORGADR
                        	    20: 				; ROM header
00:4000 4142            	    21: 	db "AB"
00:4002 CA41            	    22: 	dw Main
00:4004 0000            	    23: 	dw 0, 0, 0, 0, 0, 0
00:4006 0000
00:4008 0000
00:400A 0000
00:400C 0000
00:400E 0000
                        	    24: 
                        	    25: 
                        	    26: games:
00:4010 3130205961726420	    27: 	db "10 Yard Fight (1986)", 0
00:4018 4669676874202831
00:4020 39383629
00:4024 00
00:4025 3139343220283139	    28: 	db "1942 (1986)(ASCII)(J", 0
00:402D 3836292841534349
00:4035 4929284A
00:4039 00
00:403A 3139343220283139	    29: 	db "1942 (1987)(Zemina)(", 0
00:4042 383729285A656D69
00:404A 6E612928
00:404E 00
00:404F 334420476F6C6620	    30: 	db "3D Golf Simulation -", 0
00:4057 53696D756C617469
00:405F 6F6E202D
00:4063 00
00:4064 334420476F6C6620	    31: 	db "3D Golf Simulation -", 0
00:406C 53696D756C617469
00:4074 6F6E202D
00:4078 00
00:4079 33442054656E6E69	    32: 	db "3D Tennis (1983)(ASC", 0
00:4081 7320283139383329
00:4089 28415343
00:408D 00
00:408E 3344205761746572	    33: 	db "3D Water Driver (198", 0
00:4096 2044726976657220
00:409E 28313938
00:40A2 00
00:40A3 41204C696665204D	    34: 	db "A Life M36 Planet - ", 0
00:40AB 333620506C616E65
00:40B3 74202D20
00:40B7 00
00:40B8 412E452E20283139	    35: 	db "A.E. (1983)(Toshiba-", 0
00:40C0 38332928546F7368
00:40C8 6962612D
00:40CC 00
00:40CD 4131205370697269	    36: 	db "A1 Spirit - The Way ", 0
00:40D5 74202D2054686520
00:40DD 57617920
00:40E1 00
00:40E2 4163746D616E2028	    37: 	db "Actman (1984)(ASCII)", 0
00:40EA 3139383429284153
00:40F2 43494929
00:40F6 00
00:40F7 416476656E276368	    38: 	db "Adven'chuta! (1983)(", 0
00:40FF 7574612120283139
00:4107 38332928
00:410B 00
00:410C 416C63617A617220	    39: 	db "Alcazar - The Forgot", 0
00:4114 2D2054686520466F
00:411C 72676F74
00:4120 00
00:4121 416C696261626120	    40: 	db "Alibaba and 40 Thiev", 0
00:4129 616E642034302054
00:4131 68696576
00:4135 00
00:4136 416C69656E203820	    41: 	db "Alien 8 (1985)(Ultim", 0
00:413E 2831393835292855
00:4146 6C74696D
00:414A 00
00:414B 416C69656E203820	    42: 	db "Alien 8 (1986)(Nippo", 0
00:4153 283139383629284E
00:415B 6970706F
00:415F 00
00:4160 416C69656E732E20	    43: 	db "Aliens. Alien 2 (198", 0
00:4168 416C69656E203220
00:4170 28313938
00:4174 00
00:4175 416C70686120526F	    44: 	db "Alpha Roid (1986)(Po", 0
00:417D 6964202831393836
00:4185 2928506F
00:4189 00
00:418A 416C706861205371	    45: 	db "Alpha Squadron (1985", 0
00:4192 756164726F6E2028
00:419A 31393835
00:419E 00
00:419F 416D65726963616E	    46: 	db "American Truck (1986", 0
00:41A7 20547275636B2028
00:41AF 31393836
00:41B3 00
00:41B4 416D65726963616E	    47: 	db "American Truck (1986", 0
00:41BC 20547275636B2028
00:41C4 31393836
00:41C8 00
                        	    48: gamesend:
00:41C9 00              	    49: 	nop
                        	    50: 				; ==[ Program ]=============================================
                        	    51: 
                        	    52: FileStart:
                        	    53: Main:
                        	    54: 
                        	    55: 	; Set Screen Mode to 0
00:41CA 3E00            	    56: 	ld a, 0
00:41CC CD5F00          	    57: 	call CHMOD
                        	    58: 	; Set Pallette to White on Black
00:41CF 3E01            	    59: 	ld a, 1
00:41D1 32EAF3          	    60: 	ld (BAKCLR), a
00:41D4 32EBF3          	    61: 	ld (BDCLR), a
00:41D7 CD6200          	    62: 	call CHCOLOR
                        	    63: 	; Dummy Dir Name and Go Back to determine maximum games in list
00:41DA 215642          	    64: 	ld hl, dirName
00:41DD CD2642          	    65: 	call PrintStr
00:41E0 CD4142          	    66: 	call NewLn
00:41E3 215242          	    67: 	ld hl, goBack
00:41E6 CD2642          	    68: 	call PrintStr
00:41E9 CD4142          	    69: 	call NewLn
                        	    70: 	; Load start address for Games List
00:41EC 211040          	    71: 	ld hl,games
                        	    72: 	; ld (currentGame), hl
                        	    73: 	; Load end address for Games List
00:41EF 11C941          	    74: 	ld de, gamesend
                        	    75: 	; Initialize Loop Index to 0
00:41F2 3E00            	    76: 	ld a, 0 
00:41F4 3203C0          	    77: 	ld (loopIndex), a
                        	    78: 
                        	    79: GamesLoop:
                        	    80: 	; Put Pointer Character if LoopIndex is Equ to PointerIndex
                        	    81: 	
                        	    82: 	;; Store the current HL
00:41F7 E5              	    83: 	push hl
                        	    84: 
00:41F8 3E00            	    85: 	ld a, 0
00:41FA B7              	    86: 	or a,
00:41FB D601            	    87: 	sub 1
                        	    88: 	;; Get the Pointer Index
00:41FD 2100C0          	    89: 	ld hl, selectorIndex
00:4200 4E              	    90: 	ld c, (hl)
                        	    91: 	;; Get the LoopIndex	
00:4201 2A03C0          	    92: 	ld hl, (loopIndex)
00:4204 7D              	    93: 	ld a, l
00:4205 B9              	    94: 	cp c
00:4206 CC3042          	    95: 	call z, PrintPointer
00:4209 C43942          	    96: 	call nz, PrintSpace
00:420C 23              	    97: 	inc hl
00:420D 2203C0          	    98: 	ld (loopIndex), hl
00:4210 E1              	    99: 	pop hl
                        	   100: 	
                        	   101: 	
                        	   102: 	;; Compare the two, if equal, then print the pointer, else continue
                        	   103: 
                        	   104: 	;; Restore HL
                        	   105: 
                        	   106: 	
                        	   107: 	; Print Current Game Name and a new line
00:4211 CD2642          	   108: 	call PrintStr
00:4214 CD4142          	   109: 	call NewLn
                        	   110: 	
                        	   111: 	; Compare HL to GamesEnd
00:4217 3E00            	   112: 	ld a, 0
00:4219 B7              	   113: 	or a	; Clears Carry Flag
00:421A 23              	   114: 	inc hl
00:421B 11C941          	   115: 	ld de, gamesend
00:421E ED52            	   116: 	sbc hl,de
00:4220 19              	   117: 	add hl,de
                        	   118: 	
                        	   119: 	; Loop if HL is less than GamesEnd
00:4221 38D4            	   120: 	jr c, GamesLoop
00:4223 C34F42          	   121: 	jp MainLoop
                        	   122: 
                        	   123: PrintStr:
                        	   124: 	; Load first character of string to Reg A
00:4226 7E              	   125: 	ld a, (hl)
                        	   126: 	; If 0 detected, this is the end of the string
00:4227 FE00            	   127: 	cp 0
00:4229 C8              	   128: 	ret z
                        	   129: 	; Otherwise, Increment HL and Put the current value pointed to by HL to the screen and loop
00:422A 23              	   130: 	inc hl
00:422B CDA200          	   131: 	call CHPUT
00:422E 18F6            	   132: 	jr PrintStr
                        	   133: 
                        	   134: PrintPointer:
00:4230 F5              	   135: 	push af
00:4231 3A5E42          	   136: 	ld a, (pointerChar)
00:4234 CDA200          	   137: 	call CHPUT
00:4237 F1              	   138: 	pop af
00:4238 C9              	   139: 	ret
                        	   140: PrintSpace:
00:4239 F5              	   141: 	push af,
00:423A 3E20            	   142: 	ld a, $20
00:423C CDA200          	   143: 	call CHPUT
00:423F F1              	   144: 	pop af,
00:4240 C9              	   145: 	ret
                        	   146: 
                        	   147: NewLn:
00:4241 F5              	   148: 	push af
00:4242 3E0D            	   149: 	ld a, 13
00:4244 CDA200          	   150: 	call CHPUT
00:4247 3E0A            	   151: 	ld a, 10
00:4249 CDA200          	   152: 	call CHPUT
00:424C F1              	   153: 	pop af
00:424D C9              	   154: 	ret
                        	   155: 
                        	   156: 
                        	   157: CheckInput:
00:424E 00              	   158: 	nop
                        	   159: 
                        	   160: MainLoop:
00:424F F3              	   161: 	di
00:4250 18FC            	   162: 	jr CheckInput
                        	   163: 	
                        	   164: 
00:4252 202E2E          	   165: goBack:	 db " ..",0
00:4255 00
00:4256 2047616D65732F  	   166: dirName: db " Games/",0
00:425D 00
                        	   167: pointerChar:
00:425E 3E              	   168: 	db ">"
                        	   169: 
                        	   170: 
                        	   171: 	org $C000
                        	   172: selectorIndex:
01:C000 00              	   173: 	db 0
                        	   174: currentGame:
01:C001 0000            	   175: 	dw 0
                        	   176: 
                        	   177: loopIndex:
01:C003 00              	   178: 	db 0
                        	   179: currentPage:
01:C004 00              	   180: 	db 0


Symbols by name:
BAKCLR                           E:F3EA
BDCLR                            E:F3EB
CHCOLOR                          E:0062
CheckInput                       A:424E
CHMOD                            E:005F
CHPUT                            E:00A2
currentGame                      A:C001
currentPage                      A:C004
dirName                          A:4256
FileStart                        A:41CA
games                            A:4010
gamesend                         A:41C9
GamesLoop                        A:41F7
goBack                           A:4252
loopIndex                        A:C003
Main                             A:41CA
MainLoop                         A:424F
NewLn                            A:4241
ORGADR                           E:4000
pointerChar                      A:425E
PrintPointer                     A:4230
PrintSpace                       A:4239
PrintStr                         A:4226
selectorIndex                    A:C000

Symbols by value:
005F CHMOD
0062 CHCOLOR
00A2 CHPUT
4000 ORGADR
4010 games
41C9 gamesend
41CA FileStart
41CA Main
41F7 GamesLoop
4226 PrintStr
4230 PrintPointer
4239 PrintSpace
4241 NewLn
424E CheckInput
424F MainLoop
4252 goBack
4256 dirName
425E pointerChar
C000 selectorIndex
C001 currentGame
C003 loopIndex
C004 currentPage
F3EA BAKCLR
F3EB BDCLR

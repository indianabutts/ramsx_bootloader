Sections:
00: "seg4000" (4000-4277)


Source: "./main.asm"
                        	     1: 				; ==[ Constants ]============================================
                        	     2: 
                        	     3: ORGADR  equ $4000
                        	     4: CHPUT   equ $00A2
                        	     5: CHMOD   equ $005f
                        	     6: 
                        	     7: CHCOLOR equ $0062
                        	     8: 
                        	     9: FORCLR equ $F3E9
                        	    10: BAKCLR equ $F3EA
                        	    11: BDCLR equ $F3EB
                        	    12: 
                        	    13: KBDROW equ $AA
                        	    14: KBDDATA equ $A9
                        	    15: KEYS	EQU	$FBE5
                        	    16: 
                        	    17: selectorIndex equ $C001
                        	    18: currentGame equ $C003
                        	    19: loopIndex equ $C005
                        	    20: currentPage equ $C006
                        	    21: 
                        	    22: 				; ==[ Header ]==============================================
                        	    23: 
                        	    24: 				; Place header inside the binary.
                        	    25: 	org ORGADR
                        	    26: 				; ROM header
00:4000 4142            	    27: 	db "AB"
00:4002 CA41            	    28: 	dw Main
00:4004 0000            	    29: 	dw 0, 0, 0, 0, 0, 0
00:4006 0000
00:4008 0000
00:400A 0000
00:400C 0000
00:400E 0000
                        	    30: 
                        	    31: 
                        	    32: games:
00:4010 3130205961726420	    33: 	db "10 Yard Fight (1986)", 0
00:4018 4669676874202831
00:4020 39383629
00:4024 00
00:4025 3139343220283139	    34: 	db "1942 (1986)(ASCII)(J", 0
00:402D 3836292841534349
00:4035 4929284A
00:4039 00
00:403A 3139343220283139	    35: 	db "1942 (1987)(Zemina)(", 0
00:4042 383729285A656D69
00:404A 6E612928
00:404E 00
00:404F 334420476F6C6620	    36: 	db "3D Golf Simulation -", 0
00:4057 53696D756C617469
00:405F 6F6E202D
00:4063 00
00:4064 334420476F6C6620	    37: 	db "3D Golf Simulation -", 0
00:406C 53696D756C617469
00:4074 6F6E202D
00:4078 00
00:4079 33442054656E6E69	    38: 	db "3D Tennis (1983)(ASC", 0
00:4081 7320283139383329
00:4089 28415343
00:408D 00
00:408E 3344205761746572	    39: 	db "3D Water Driver (198", 0
00:4096 2044726976657220
00:409E 28313938
00:40A2 00
00:40A3 41204C696665204D	    40: 	db "A Life M36 Planet - ", 0
00:40AB 333620506C616E65
00:40B3 74202D20
00:40B7 00
00:40B8 412E452E20283139	    41: 	db "A.E. (1983)(Toshiba-", 0
00:40C0 38332928546F7368
00:40C8 6962612D
00:40CC 00
00:40CD 4131205370697269	    42: 	db "A1 Spirit - The Way ", 0
00:40D5 74202D2054686520
00:40DD 57617920
00:40E1 00
00:40E2 4163746D616E2028	    43: 	db "Actman (1984)(ASCII)", 0
00:40EA 3139383429284153
00:40F2 43494929
00:40F6 00
00:40F7 416476656E276368	    44: 	db "Adven'chuta! (1983)(", 0
00:40FF 7574612120283139
00:4107 38332928
00:410B 00
00:410C 416C63617A617220	    45: 	db "Alcazar - The Forgot", 0
00:4114 2D2054686520466F
00:411C 72676F74
00:4120 00
00:4121 416C696261626120	    46: 	db "Alibaba and 40 Thiev", 0
00:4129 616E642034302054
00:4131 68696576
00:4135 00
00:4136 416C69656E203820	    47: 	db "Alien 8 (1985)(Ultim", 0
00:413E 2831393835292855
00:4146 6C74696D
00:414A 00
00:414B 416C69656E203820	    48: 	db "Alien 8 (1986)(Nippo", 0
00:4153 283139383629284E
00:415B 6970706F
00:415F 00
00:4160 416C69656E732E20	    49: 	db "Aliens. Alien 2 (198", 0
00:4168 416C69656E203220
00:4170 28313938
00:4174 00
00:4175 416C70686120526F	    50: 	db "Alpha Roid (1986)(Po", 0
00:417D 6964202831393836
00:4185 2928506F
00:4189 00
00:418A 416C706861205371	    51: 	db "Alpha Squadron (1985", 0
00:4192 756164726F6E2028
00:419A 31393835
00:419E 00
00:419F 416D65726963616E	    52: 	db "American Truck (1986", 0
00:41A7 20547275636B2028
00:41AF 31393836
00:41B3 00
00:41B4 416D65726963616E	    53: 	db "American Truck (1986", 0
00:41BC 20547275636B2028
00:41C4 31393836
00:41C8 00
                        	    54: gamesend:
00:41C9 00              	    55: 	nop
                        	    56: 				; ==[ Program ]=============================================
                        	    57: 
                        	    58: FileStart:
                        	    59: Main:
00:41CA 210800          	    60: 	ld hl, 8
00:41CD 22AA00          	    61: 	ld (KBDROW), hl
                        	    62: 	; Set Screen Mode to 0
00:41D0 3E00            	    63: 	ld a, 0
00:41D2 CD5F00          	    64: 	call CHMOD
                        	    65: 	; Set Pallette to White on Black
00:41D5 3E01            	    66: 	ld a, 1
00:41D7 32EAF3          	    67: 	ld (BAKCLR), a
00:41DA 32EBF3          	    68: 	ld (BDCLR), a
00:41DD CD6200          	    69: 	call CHCOLOR
                        	    70: 	; Dummy Dir Name and Go Back to determine maximum games in list
00:41E0 216E42          	    71: 	ld hl, dirName
00:41E3 CD2C42          	    72: 	call PrintStr
00:41E6 CD4742          	    73: 	call NewLn
00:41E9 216A42          	    74: 	ld hl, goBack
00:41EC CD2C42          	    75: 	call PrintStr
00:41EF CD4742          	    76: 	call NewLn
                        	    77: 	; Load start address for Games List
00:41F2 211040          	    78: 	ld hl,games
                        	    79: 	; ld (currentGame), hl
                        	    80: 	; Load end address for Games List
00:41F5 11C941          	    81: 	ld de, gamesend
                        	    82: 	; Initialize Loop Index to 0
00:41F8 3E00            	    83: 	ld a, 0 
00:41FA 3205C0          	    84: 	ld (loopIndex), a
                        	    85: 
                        	    86: GamesLoop:
                        	    87: 	; Put Pointer Character if LoopIndex is Equ to PointerIndex
                        	    88: 	
                        	    89: 	;; Store the current HL
00:41FD E5              	    90: 	push hl
                        	    91: 
00:41FE 3E00            	    92: 	ld a, 0
00:4200 B7              	    93: 	or a,
00:4201 D601            	    94: 	sub 1
                        	    95: 	;; Get the Pointer Index
00:4203 2101C0          	    96: 	ld hl, selectorIndex
00:4206 4E              	    97: 	ld c, (hl)
                        	    98: 	;; Get the LoopIndex	
00:4207 2A05C0          	    99: 	ld hl, (loopIndex)
00:420A 7D              	   100: 	ld a, l
00:420B B9              	   101: 	cp c
00:420C CC3642          	   102: 	call z, PrintPointer
00:420F C43F42          	   103: 	call nz, PrintSpace
00:4212 23              	   104: 	inc hl
00:4213 2205C0          	   105: 	ld (loopIndex), hl
00:4216 E1              	   106: 	pop hl
                        	   107: 	
                        	   108: 	
                        	   109: 	;; Compare the two, if equal, then print the pointer, else continue
                        	   110: 
                        	   111: 	;; Restore HL
                        	   112: 
                        	   113: 	
                        	   114: 	; Print Current Game Name and a new line
00:4217 CD2C42          	   115: 	call PrintStr
00:421A CD4742          	   116: 	call NewLn
                        	   117: 	
                        	   118: 	; Compare HL to GamesEnd
00:421D 3E00            	   119: 	ld a, 0
00:421F B7              	   120: 	or a	; Clears Carry Flag
00:4220 23              	   121: 	inc hl
00:4221 11C941          	   122: 	ld de, gamesend
00:4224 ED52            	   123: 	sbc hl,de
00:4226 19              	   124: 	add hl,de
                        	   125: 	
                        	   126: 	; Loop if HL is less than GamesEnd
00:4227 38D4            	   127: 	jr c, GamesLoop
00:4229 C36642          	   128: 	jp MainLoop
                        	   129: 
                        	   130: PrintStr:
                        	   131: 	; Load first character of string to Reg A
00:422C 7E              	   132: 	ld a, (hl)
                        	   133: 	; If 0 detected, this is the end of the string
00:422D FE00            	   134: 	cp 0
00:422F C8              	   135: 	ret z
                        	   136: 	; Otherwise, Increment HL and Put the current value pointed to by HL to the screen and loop
00:4230 23              	   137: 	inc hl
00:4231 CDA200          	   138: 	call CHPUT
00:4234 18F6            	   139: 	jr PrintStr
                        	   140: 
                        	   141: PrintPointer:
00:4236 F5              	   142: 	push af
00:4237 3A7642          	   143: 	ld a, (pointerChar)
00:423A CDA200          	   144: 	call CHPUT
00:423D F1              	   145: 	pop af
00:423E C9              	   146: 	ret
                        	   147: PrintSpace:
00:423F F5              	   148: 	push af,
00:4240 3E20            	   149: 	ld a, $20
00:4242 CDA200          	   150: 	call CHPUT
00:4245 F1              	   151: 	pop af,
00:4246 C9              	   152: 	ret
                        	   153: 
                        	   154: NewLn:
00:4247 F5              	   155: 	push af
00:4248 3E0D            	   156: 	ld a, 13
00:424A CDA200          	   157: 	call CHPUT
00:424D 3E0A            	   158: 	ld a, 10
00:424F CDA200          	   159: 	call CHPUT
00:4252 F1              	   160: 	pop af
00:4253 C9              	   161: 	ret
                        	   162: IncrementSelector:
00:4254 2A01C0          	   163: 	ld hl, (selectorIndex)
00:4257 23              	   164: 	inc hl
00:4258 2201C0          	   165: 	ld (selectorIndex), hl
00:425B CDFD41          	   166: 	call GamesLoop
                        	   167: CheckInput:
00:425E 3AEDFB          	   168: 	ld a, (KEYS+8)
00:4261 CB77            	   169: 	bit 6, a
00:4263 CC5442          	   170: 	call z, IncrementSelector
                        	   171: 	
                        	   172: 	; ld b, 8
                        	   173: 	; in a, (KBDROW)
                        	   174: 	; and $F0
                        	   175: 	; or b
                        	   176: 	; out ($AA), a
                        	   177: 	; in a,($A9)
                        	   178: 	; bit 6, a
                        	   179: 	; call z, IncrementSelector
                        	   180: 
                        	   181: 
                        	   182: 
                        	   183: MainLoop:
00:4266 F3              	   184: 	di
00:4267 C35E42          	   185: 	jp CheckInput
                        	   186: 	
                        	   187: 
00:426A 202E2E          	   188: goBack:	 db " ..",0
00:426D 00
00:426E 2047616D65732F  	   189: dirName: db " Games/",0
00:4275 00
                        	   190: pointerChar:
00:4276 3E              	   191: 	db ">"
                        	   192: 
                        	   193: 
                        	   194: ;; Variables to store in RAM
                        	   195: ;;	org $C000
                        	   196: ; selectorIndex:
                        	   197: ; 	db 0
                        	   198: ; currentGame:
                        	   199: ; 	dw 0
                        	   200: 
                        	   201: ; loopIndex:
                        	   202: ; 	db 0
                        	   203: ; currentPage:
                        	   204: ; 	db 0


Symbols by name:
BAKCLR                           E:F3EA
BDCLR                            E:F3EB
CHCOLOR                          E:0062
CheckInput                       A:425E
CHMOD                            E:005F
CHPUT                            E:00A2
dirName                          A:426E
FileStart                        A:41CA
games                            A:4010
gamesend                         A:41C9
GamesLoop                        A:41FD
goBack                           A:426A
IncrementSelector                A:4254
KBDROW                           E:00AA
KEYS                             E:FBE5
loopIndex                        E:C005
Main                             A:41CA
MainLoop                         A:4266
NewLn                            A:4247
ORGADR                           E:4000
pointerChar                      A:4276
PrintPointer                     A:4236
PrintSpace                       A:423F
PrintStr                         A:422C
selectorIndex                    E:C001

Symbols by value:
005F CHMOD
0062 CHCOLOR
00A2 CHPUT
00AA KBDROW
4000 ORGADR
4010 games
41C9 gamesend
41CA Main
41CA FileStart
41FD GamesLoop
422C PrintStr
4236 PrintPointer
423F PrintSpace
4247 NewLn
4254 IncrementSelector
425E CheckInput
4266 MainLoop
426A goBack
426E dirName
4276 pointerChar
C001 selectorIndex
C005 loopIndex
F3EA BAKCLR
F3EB BDCLR
FBE5 KEYS
